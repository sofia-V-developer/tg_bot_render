import logging
import sqlite3
import threading
import os
from flask import Flask
from telegram import Update
from telegram.ext import Application, CommandHandler, MessageHandler, ContextTypes, filters

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', 
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã (–∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏)
TOKEN = os.environ.get("BOT_TOKEN", "8369190866:AAE1G2UHoA1lErQvE4iw7L0s21Alkc5Otak")
GROUP_CHAT_ID = os.environ.get("GROUP_CHAT_ID", "-1003031407522")

# –°–æ–∑–¥–∞–µ–º Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
app = Flask(__name__)

@app.route('/')
def home():
    return "–ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –∏ –≥–æ—Ç–æ–≤ –∫ –ø—Ä–∏–µ–º—É —Å–æ–æ–±—â–µ–Ω–∏–π!"

@app.route('/health')
def health():
    return "OK", 200

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
def init_db():
    conn = sqlite3.connect('bot_data.db')
    c = conn.cursor()
    c.execute('''CREATE TABLE IF NOT EXISTS messages
                 (user_id INTEGER, message_id INTEGER, group_message_id INTEGER)''')
    conn.commit()
    conn.close()

# –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–≤—è–∑–∏ –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
def save_message_link(user_id, user_message_id, group_message_id):
    conn = sqlite3.connect('bot_data.db')
    c = conn.cursor()
    c.execute("INSERT INTO messages VALUES (?, ?, ?)",
              (user_id, user_message_id, group_message_id))
    conn.commit()
    conn.close()

# –ü–æ–ª—É—á–µ–Ω–∏–µ user_id –∏ message_id –ø–æ group_message_id
def get_user_message_data(group_message_id):
    conn = sqlite3.connect('bot_data.db')
    c = conn.cursor()
    c.execute("SELECT user_id, message_id FROM messages WHERE group_message_id=?",
              (group_message_id,))
    result = c.fetchone()
    conn.close()
    return result

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user = update.effective_user
    welcome_text = """–ü—Ä–∏–≤–µ—Ç! –†–∞–¥ —Ç–µ–±—è –∑–¥–µ—Å—å —É–≤–∏–¥–µ—Ç—åü§†üëã
    
‚Ä¢ –ö–û–ù–ö–£–†–° –ß—Ç–æ –±—ã —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –∫–æ–Ω–∫—É—Ä—Å–µ –Ω–∞ "‚ù§Ô∏è" –≤ TikTok –æ—Ç–ø—Ä–∞–≤—å —Å—é–¥–∞ —Å—Å—ã–ª–∫–∏ –Ω–∞ —Å–≤–æ–∏ –≤–∏–¥–µ–æ. 
–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø–∏—à–µ–º —Å–≤–æ–π —é–∑ —Ç–≥ –≤ –Ω–∞—á–∞–ª–µ! üìÜ–¥–æ 28.09 - 20:00. (–ø–æ –º—Å–∫)

- –§–æ—Ä–º–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏—è:
@–≤–∞—à_–Ω–∏–∫:
1) —Å—Å—ã–ª–∫–∞ –Ω–∞ –≤–∏–¥–µ–æ 1
2) —Å—Å—ã–ª–∫–∞ –Ω–∞ –≤–∏–¥–µ–æ 2
3) —Å—Å—ã–ª–∫–∞ –Ω–∞ –≤–∏–¥–µ–æ 3

‚Ä¢ –ê–ö–¶–ò–Ø ¬´–ü–†–ò–í–ï–î–ò –ß–ò–¢–ê–¢–ï–õ–Ø¬ª
–ï—Å–ª–∏ —Ç—ã —É—á–∞—Å—Ç–≤—É–µ—à—å –≤ –∞–∫—Ü–∏–∏ ¬´–ø—Ä–∏–≤–µ–¥–∏ —á–∏—Ç–∞—Ç–µ–ª—è¬ª —Ç–æ –ø—Ä–∏—Å—ã–ª–∞–π —Å—é–¥–∞ –µ–≥–æ –Ω–∏–∫ –∏ —Å–≤–æ–π. 
–ê–∫—Ü–∏—è –¥–µ–π—Å—Ç–≤—É–µ—ÇüìÜ–¥–æ 30.11 - 20:00

- –§–æ—Ä–º–∞—Ç —Å–æ–æ–±—â–µ–Ω–∏—è:
@–Ω–∏–∫_–ø—Ä–∏–≤–µ–¥–µ–Ω–Ω–æ–≥–æ_—á–∏—Ç–∞—Ç–µ–ª—è - @–≤–∞—à_–Ω–∏–∫

‚Ä¢ –í–´–ò–ì–†–´–® –ò –í–´–ü–õ–ê–¢–ê –ü–†–ò–ó–ê ü•≥üí∏
–ü–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è –∫–æ–Ω–∫—É—Ä—Å–∞/–∞–∫—Ü–∏–∏ —è —Å–≤—è–∂—É—Å—å —Å –≤–∞–º–∏ –∑–¥–µ—Å—å, –≤ —ç—Ç–æ–º —á–∞—Ç–µ, –¥–ª—è —É—Ç–æ—á–Ω–µ–Ω–∏—è –¥–µ—Ç–∞–ª–µ–π –≤—ã–ø–ª–∞—Ç—ã.
–í—Å–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –Ω–æ–º–µ—Ä –∫–∞—Ä—Ç—ã) —è–≤–ª—è—é—Ç—Å—è —Å—Ç—Ä–æ–≥–æ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–º–∏, 
–≤–∏–¥–Ω—ã —Ç–æ–ª—å–∫–æ –º–Ω–µ –∏ –±—É–¥—É—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω—ã –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ –≤–∞—à–µ–≥–æ –≤—ã–∏–≥—Ä—ã—à–∞. 
–ü–æ—Å–ª–µ –≤—ã–ø–ª–∞—Ç—ã –æ–Ω–∏ –±—É–¥—É—Ç —É–¥–∞–ª–µ–Ω—ã.

‚Ä¢ –ï—Å–ª–∏ —É —Ç–µ–±—è –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –ø–æ –ø–æ–≤–æ–¥—É –∫–æ–Ω–∫—É—Ä—Å–∞ –∏–ª–∏ –∞–∫—Ü–∏–∏ - –ø–∏—à–∏, —Ä–∞–¥ –±—É–¥—É –æ—Ç–≤–µ—Ç–∏—Ç—å‚ò∫Ô∏è
–æ–±–æ –≤—Å–µ—Ö —É—Å–ª–æ–≤–∏—è—Ö –∫–æ–Ω–∫—É—Ä—Å–∞ –∏ –∞–∫—Ü–∏–∏ –º–æ–∂–Ω–æ –ø—Ä–æ—á–∏—Ç–∞—Ç—å –≤ –∑–∞–∫—Ä–µ–ø–µ —Ç–≥–∫: @saaibankrot

–ê —Ç–∞–∫–∂–µ –∑–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –º–Ω–µ –∑–∞–¥–∞—Ç—å –ª—é–±–æ–π –≤–æ–ø—Ä–æ—Å –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –ª—é–±–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µüôÉ
(–ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –æ—Ç–≤–µ—Ç–∏—Ç—å –∫–∞–∫ –º–æ–∂–Ω–æ —Å–∫–æ—Ä–µ–µ))"""

    await update.message.reply_html(welcome_text)

# –ü–µ—Ä–µ—Å—ã–ª–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≥—Ä—É–ø–ø—É
async def forward_to_group(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user = update.effective_user
    user_info = f"@{user.username}" if user.username else f"{user.first_name} {user.last_name or ''} (ID: {user.id})"
    caption = f"üì® –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç: {user_info}\n\n"
    
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
        await context.bot.send_message(chat_id=GROUP_CHAT_ID, text=caption)
        # –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        forwarded_msg = await update.message.forward(chat_id=GROUP_CHAT_ID)
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–≤—è–∑—å –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
        save_message_link(user.id, update.message.message_id, forwarded_msg.message_id)
        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        await update.message.reply_text("‚úÖ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞ –æ—Ç –∞–≤—Ç–æ—Ä–∞üôÇ‚Äç‚ÜïÔ∏è")
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Å—ã–ª–∫–µ: {e}")
        await update.message.reply_text("üòî –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤ –≤ –≥—Ä—É–ø–ø–µ
async def handle_group_reply(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ –Ω—É–∂–Ω–æ–π –≥—Ä—É–ø–ø—ã
    if str(update.effective_chat.id) != str(GROUP_CHAT_ID):
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if not update.message.reply_to_message:
        return
        
    replied_message_id = update.message.reply_to_message.message_id
    
    # –ò—â–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_data = get_user_message_data(replied_message_id)
    if user_data:
        user_id, original_message_id = user_data
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        reply_text = f"‚ú®–æ—Ç–≤–µ—Ç –æ—Ç –∞–≤—Ç–æ—Ä–∞:\n\n{update.message.text}"
        await context.bot.send_message(chat_id=user_id, text=reply_text)
        # –£–≤–µ–¥–æ–º–ª—è–µ–º –≤ –≥—Ä—É–ø–ø–µ –æ–± —É—Å–ø–µ—à–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–µ
        await update.message.reply_text("‚úÖ –û—Ç–≤–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —á–∏—Ç–∞—Ç–µ–ª—é!")
    else:
        await update.message.reply_text("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —á–∏—Ç–∞—Ç–µ–ª—è –¥–ª—è –æ—Ç–≤–µ—Ç–∞.")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
async def error_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è {update}: {context.error}")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
def run_bot():
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    init_db()
    
    # –°–æ–∑–¥–∞–µ–º Application
    application = Application.builder().token(TOKEN).build()
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
    application.add_handler(CommandHandler("start", start))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    application.add_handler(MessageHandler(
        filters.TEXT & ~filters.COMMAND & ~filters.ChatType.GROUPS,
        forward_to_group
    ))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –º–µ–¥–∏–∞-—Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    application.add_handler(MessageHandler(
        filters.PHOTO | filters.Document.ALL | filters.VIDEO | filters.AUDIO,
        forward_to_group
    ))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–≤–µ—Ç–æ–≤ –≤ –≥—Ä—É–ø–ø–µ (–≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –≥—Ä—É–ø–ø–∞—Ö)
    application.add_handler(MessageHandler(
        filters.TEXT & filters.ChatType.GROUPS,
        handle_group_reply
    ))
    
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
    application.add_error_handler(error_handler)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç...")
    application.run_polling()

# –ó–∞–ø—É—Å–∫ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
def start_bot():
    bot_thread = threading.Thread(target=run_bot)
    bot_thread.daemon = True
    bot_thread.start()

if __name__ == '__main__':
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    start_bot()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
    port = int(os.environ.get('PORT', 5000))
    app.run(host='0.0.0.0', port=port)
